library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;
use IEEE.std_LOGIC_signed.all;


entity bin2bcd_8bit is
    Port ( binIN : in  STD_LOGIC_VECTOR (7 downto 0);
           ones : out  STD_LOGIC_VECTOR (3 downto 0);
           tens : out  STD_LOGIC_VECTOR (3 downto 0);
           hundreds : out  STD_LOGIC_VECTOR (3 downto 0));
                   
end bin2bcd_8bit;

architecture Behavioral of bin2bcd_8bit is

begin

 process(binIN)
 variable temp : STD_LOGIC_VECTOR (7 downto 0);
 variable bcd : SIGNED (11 downto 0) := (others => '0');
  begin
        bcd := (others => '0');
    
        temp(7 downto 0) := binIN;
    
       for i in 0 to 7 loop
    
      if bcd(3 downto 0) > 4 then 
        bcd(3 downto 0) := bcd(3 downto 0) + 3;
      end if;
      
      if bcd(7 downto 4) > 4 then 
        bcd(7 downto 4) := bcd(7 downto 4) + 3;
      end if;
    
      if bcd(11 downto 8) > 4 then  
        bcd(11 downto 8) := bcd(11 downto 8) + 3;
      end if;
    
      bcd := bcd(10 downto 0) & temp(7);
    
      
      temp := temp(6 downto 0) & '0';
    
    end loop;
 
    
    ones <= STD_LOGIC_VECTOR(bcd(3 downto 0));
    tens <= STD_LOGIC_VECTOR(bcd(7 downto 4));
    hundreds <= STD_LOGIC_VECTOR(bcd(11 downto 8));
     
  end process ;           
  
end Behavioral;